#! /usr/bin/perl
use strict;
use Font::TTF::Scripts::Fea;
use IO::File;
use Getopt::Long;
use Pod::Usage;

our(%opts);
GetOptions(\%opts, 'ap|a=s', 'help|h', 'include|i=s@', 'ligatures|l=s',
                'omitaps|o=s', 'renameaps|r', 
                'z=i', 'mark|m=s');

unless ($ARGV[1] || $opts{'help'})
{
    pod2usage(1);
    exit;
}

if ($opts{'help'})
{
    pod2usage(-verbose => 2, -noperldoc => 1);
    exit;
}

my %options;

# Parse -e file if supplied
if ($opts{'excludes'}) 
{
    my @glist;
	open (IN, "<$opts{'excludes'}") or die "Couldn't open '$opts{'excludes'}' for reading.";
	while (<IN>)
	{
		s/[\r\n]*$//o;      # platform-safe chomp
		s/;.*$//o;          # Strip comments
		s/ //go;            # Strip whitespace
		push (@glist, $_) unless $_ eq '';
	}
    close IN;
	$options{'-knownemptyglyphs'} = \@glist if scalar(@glist);
}

my $f = Font::TTF::Scripts::Fea->read_font($ARGV[0], $opts{'ap'}, %options) || die "Can't read font information";

if (exists $f->{'WARNINGS'})
{
	warn $f->{'WARNINGS'};
}


my $outfh = IO::File->new("> $ARGV[1]") || die "Can't open $ARGV[1] for writing";

my $comp = $1 if ($opts{'ligatures'} =~ s/(comp)$//oi);

if ($opts{'renameaps'})
{
    foreach my $g (@{$f->{'glyphs'}})
    {
        my ($points) = {};
        foreach my $p (keys %{$g->{'points'}})
        {
            my ($pname) = $p;

            if ($pname =~ s/^(.+)M$/_$1/o)
            { }
            elsif ($pname =~ s/^(.+)S$/$1/o)
            { }
            $points->{$pname} = $g->{'points'}{$p};
        }
        $g->{'points'} = $points;
    }
}

$f->{'vecs'} = {};

$f->make_classes(-ligatures => $opts{'ligatures'}, -ligtype => $comp, -ignoredAPs => $options{'omitaps'}, -notmark => $opts{'mark'});
$f->out_classes($outfh);
$f->out_pos_lookups($outfh);
$f->end_out($outfh, $opts{'include'});

$outfh->close();

__END__

=head1 TITLE

make_fea - Create GDL from a TrueType Font

=head1 SYNOPSIS

  make_fea [-a file] [-i file] [-l type [-s num]] [-n num] [-z bitfield]
           infile outfile
  make_fea -h
Creates font specific AFDKO fea source file from a font and optional attachment point database

=head1 OPTIONS

  -a file       Attachment point database
  -h            print manpage
  -i file       add #include statement at end of file
  -l type       type =
                    first - class name is first code, contents other codes
                    last  - class name is last code, contents other codes
                    firstcomp - treat extensions as part of elements, as first
                    lastcomp - treat extensions as part of elements, as last
  -m "list"     List of APs to ignore when deciding whether a glyph is a mark
  -o "list"     List of AP names to omit
  -r            Rename point names such that final M gets initial _ and final S
                is removed. Typically for Fontographer fonts.
  -z bitfield   Bitfield of various controls:
                    0 - use component properties to set ligature bounding boxes
                    1 - normalise even if presentation is only references
                    2 - use postscript names in glyph definitions


=cut
